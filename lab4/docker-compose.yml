version: '3.7'
services:

  users_service:
    tty: true
    container_name: user_service
    build:
      context: ./users_service
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    networks:
      - arch-network

  conferences:
    container_name: conferences
    build:
      context: ./conferences_api/
      dockerfile: Dockerfile
    ports:
      - 8081:8080
    networks:
      - arch-network

  reports:
    container_name: reports
    build:
      context: ./reports_api/
      dockerfile: Dockerfile
    ports:
      - 8082:8080
    networks:
      - arch-network

  db:
    container_name: postgres
    image: postgres:15
    environment:
      - POSTGRES_USER=stud
      - POSTGRES_PASSWORD=stud
      - PGDATA=/data/postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - arch-network

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    networks:
      - arch-network

  data_generator:
    container_name: data_generator
    build:
      context: ./init/
      dockerfile: Dockerfile
    networks:
      - arch-network

networks:
  arch-network:
    driver: "bridge"
    external: false
